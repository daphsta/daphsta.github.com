<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2015-01-06 11:44"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Learning Journals: Ruby on Rails</title>
<link>https://daphnerouw.wordpress.com</link>
<description>Reflections of my learning journey</description>
<pubDate>Tue, 06 Jan 2015 11:44:14 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://daphnerouw.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>daphsta</wp:author_login>
  <wp:author_email>yiingshan@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[daphsta]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>51371415</wp:term_id>
  <wp:category_nicename>code-school</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Code School]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>171314629</wp:term_id>
  <wp:category_nicename>codeschool-2</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[CodeSchool]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>4276</wp:term_id>
  <wp:tag_slug>api</wp:tag_slug>
  <wp:tag_name><![CDATA[API]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1449837</wp:term_id>
  <wp:tag_slug>braintree</wp:tag_slug>
  <wp:tag_name><![CDATA[BrainTree]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>880648</wp:term_id>
  <wp:tag_slug>capybara</wp:tag_slug>
  <wp:tag_name><![CDATA[Capybara]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25477</wp:term_id>
  <wp:tag_slug>cod</wp:tag_slug>
  <wp:tag_name><![CDATA[cod]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>53755300</wp:term_id>
  <wp:tag_slug>codeschool</wp:tag_slug>
  <wp:tag_name><![CDATA[codeschool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>29450027</wp:term_id>
  <wp:tag_slug>coffeescript</wp:tag_slug>
  <wp:tag_name><![CDATA[coffeescript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2399587</wp:term_id>
  <wp:tag_slug>handlebars</wp:tag_slug>
  <wp:tag_name><![CDATA[handlebars]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>993729</wp:term_id>
  <wp:tag_slug>mandrill</wp:tag_slug>
  <wp:tag_name><![CDATA[Mandrill]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>90869573</wp:term_id>
  <wp:tag_slug>rails-girls</wp:tag_slug>
  <wp:tag_name><![CDATA[Rails Girls]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>889420</wp:term_id>
  <wp:tag_slug>rspec</wp:tag_slug>
  <wp:tag_name><![CDATA[RSpec]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3601</wp:term_id>
  <wp:tag_slug>ruby-on-rails</wp:tag_slug>
  <wp:tag_name><![CDATA[ruby on rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>169572173</wp:term_id>
  <wp:tag_slug>state-machin</wp:tag_slug>
  <wp:tag_name><![CDATA[state machin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1583013</wp:term_id>
  <wp:tag_slug>state-machines</wp:tag_slug>
  <wp:tag_name><![CDATA[state machines]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>176372</wp:term_id>
  <wp:tag_slug>summer-of-code</wp:tag_slug>
  <wp:tag_name><![CDATA[Summer of Code]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2932</wp:term_id>
  <wp:tag_slug>tutorial</wp:tag_slug>
  <wp:tag_name><![CDATA[tutorial]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://secure.gravatar.com/blavatar/8e074d1ca9a5da231c636ee6eb8c55c9?s=96&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title> &#187; Learning Journals: Ruby on Rails</title>
		<link>https://daphnerouw.wordpress.com</link>
	</image>
	<item>
  <title>About</title>
  <link>https://daphnerouw.wordpress.com/about/</link>
  <pubDate>Sun, 20 May 2007 15:11:19 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[Living in between the bustling city of Brisbane and the holiday paradise,Gold Coast, I'm immersing myself into Â Ruby on Rails to become a developer soon. I've been dedicating my days and hours to studying Ruby on Rails and right now building an app together with the team from Code School AU. My blog helps me reflect on what I've been learning and my experience in building a real-world app. I am happy and very keen to connect with people of similar interest and motivation. :D]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2007-05-20 15:11:19</wp:post_date>
  <wp:post_date_gmt>2007-05-20 15:11:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1183069]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>370</wp:comment_id>
    <wp:comment_author><![CDATA[William Morris]]></wp:comment_author>
    <wp:comment_author_email>imagocell@outlook.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>85.183.203.130</wp:comment_author_IP>
    <wp:comment_date>2013-08-01 05:59:45</wp:comment_date>
    <wp:comment_date_gmt>2013-07-31 19:59:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very cool and thank you for sharing!  I'm learning Ruby in preparation for RoR.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1375300785.8021109104156494140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1375310571</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-07-31 19:59:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>371</wp:comment_id>
    <wp:comment_author><![CDATA[daphsta]]></wp:comment_author>
    <wp:comment_author_email>yiingshan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>123.211.143.47</wp:comment_author_IP>
    <wp:comment_date>2013-08-01 08:42:52</wp:comment_date>
    <wp:comment_date_gmt>2013-07-31 22:42:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh yes, I did Ruby Koans and found it useful albeit challenging at times. ]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>370</wp:comment_parent>
    <wp:comment_user_id>1183069</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1375310573</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1375310574.241641998291015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"daphsta";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-07-31 22:42:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>366</wp:comment_id>
    <wp:comment_author><![CDATA[Joshua KEmp]]></wp:comment_author>
    <wp:comment_author_email>joshuakemp85@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.joshuakemp.net</wp:comment_author_url>
    <wp:comment_author_IP>70.208.149.109</wp:comment_author_IP>
    <wp:comment_date>2013-06-06 22:47:38</wp:comment_date>
    <wp:comment_date_gmt>2013-06-06 12:47:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You will soon, keep on rocking!! :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370522860</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370522861.0178930759429931640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"joshuakemp01";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-06 12:47:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>364</wp:comment_id>
    <wp:comment_author><![CDATA[Joshua Kemp]]></wp:comment_author>
    <wp:comment_author_email>joshuakemp85@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.joshuakemp.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>70.208.151.101</wp:comment_author_IP>
    <wp:comment_date>2013-06-03 23:58:31</wp:comment_date>
    <wp:comment_date_gmt>2013-06-03 13:58:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wow,  love what you are doing with Codeschool and your blog, can't wait to see how your journey goes!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370267911.9893500804901123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"joshuakemp01";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370305925</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-03 13:58:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>365</wp:comment_id>
    <wp:comment_author><![CDATA[daphsta]]></wp:comment_author>
    <wp:comment_author_email>yiingshan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>123.211.178.213</wp:comment_author_IP>
    <wp:comment_date>2013-06-04 10:35:30</wp:comment_date>
    <wp:comment_date_gmt>2013-06-04 00:35:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Josh, the whole idea is to understand how to design an app from scratch and I don't have that capability as of yet.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1183069</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370306131</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370306131.3789050579071044921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"daphsta";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-04 00:35:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>372</wp:comment_id>
    <wp:comment_author><![CDATA[Nicole S.]]></wp:comment_author>
    <wp:comment_author_email>nmh383@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>71.203.94.202</wp:comment_author_IP>
    <wp:comment_date>2014-06-10 04:30:55</wp:comment_date>
    <wp:comment_date_gmt>2014-06-09 18:30:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you so much for sharing! I am trying to get back into programming myself. I went to college and majored in Comp Sci the first two year but switched to Business and ended up graduating with that degree. I would love (and am trying) to get back into programming, learning about HTML, CSS and Javascript, which I'm finding fun, but I'm a little unsure as to how to get started with Ruby, which I've been hearing a lot about and would love to learn as well. Any tips as to how to get started for someone that isn't too experienced with programming to begin with?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1402338655.6184909343719482421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>24550035253</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1402398205</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-09 18:31:16</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1402398205</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1402398206.24168491363525390625;s:7:"message";s:46:"daphsta changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"daphsta";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>373</wp:comment_id>
    <wp:comment_author><![CDATA[daphsta]]></wp:comment_author>
    <wp:comment_author_email>yiingshan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>124.179.133.203</wp:comment_author_IP>
    <wp:comment_date>2014-06-10 21:13:40</wp:comment_date>
    <wp:comment_date_gmt>2014-06-10 11:13:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Nicole,
Glad to know that my experience can be encouraging to someone else trying to get into Ruby. Do you still remember anything from Object Oriented Programming? I was recently introduced to http://www.theodinproject.com/web-development-101 by a group of beginners and found it very useful in terms of introducing everything about web development.
All I can say is learn ruby first through sites like TryRuby and then go through the Michael Hartl's tutorial. Good luck!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>372</wp:comment_parent>
    <wp:comment_user_id>1183069</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1402398821</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1402398821.730722904205322265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"daphsta";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>24550209309</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1402398822</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-10 11:13:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>374</wp:comment_id>
    <wp:comment_author><![CDATA[Nicole S.]]></wp:comment_author>
    <wp:comment_author_email>nmh383@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>71.203.94.202</wp:comment_author_IP>
    <wp:comment_date>2014-06-12 02:22:02</wp:comment_date>
    <wp:comment_date_gmt>2014-06-11 16:22:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you so much! That site is very helpful &amp; what I was looking for. Thanks for the encouragement &amp; I wish you the best of luck as well! :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1402503722</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1402503722.427134037017822265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>24579626573</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1402503722</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-11 16:22:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>cropped-p1010744.jpg</title>
  <link>https://daphnerouw.wordpress.com/?attachment_id=149</link>
  <pubDate>Fri, 17 May 2013 05:29:53 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.files.wordpress.com/2013/05/cropped-p1010744.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://daphnerouw.files.wordpress.com/2013/05/cropped-p1010744.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>149</wp:post_id>
  <wp:post_date>2013-05-17 15:29:53</wp:post_date>
  <wp:post_date_gmt>2013-05-17 05:29:53</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-p1010744-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://daphnerouw.files.wordpress.com/2013/05/cropped-p1010744.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/chunk]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>First week of code school</title>
  <link>https://daphnerouw.wordpress.com/2013/05/19/first-week-of-code-school/</link>
  <pubDate>Sun, 19 May 2013 05:36:40 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.wordpress.com/?p=150</guid>
  <description/>
  <content:encoded><![CDATA[<p>And so it began, my experience in building a Rails app with the guidance of a professional. The class is definitely not for the ultimate beginner as attendees are expected to have completed the <a href="http://ruby.railstutorial.org/">Michael Hartl's Ruby on Rails tutorial</a>. Don't give up on this tutorial if you think the first chapter , which is setting up the environment and familiarizing with GitHub, is too tedious and you just can't wait to start coding. You just need to push through the setting up stage (which is unfortunately a lengthy process) before seeing the fruits of your labor. Also, I would recommend diving straight into this tutorial rather than going through TryRuby because it is easy to lose the plot halfway through TryRuby. I got lost through the stories in poems in TryRuby. Michael Hartl has an entire chapter on Ruby itself and that would be sufficient to understand what is going on in Rails.</p><p>Lots of RSpec on the first day of the 3 hour lesson using FactoryGirl of course and setting up <a href="https://github.com/pluginaweek/state_machine">state machines</a>Â for the app. I like the idea of using state machines to define theÂ behavior of a class rather than toggling boolean variables which will end up really messy as it gets complex.Â </p><p>Our next task was to design the flow of how an email is supposed to be delivered using thread workers and integrating with a 3rd party email delivery API. It was helpful to decide how the controller should call the methods before actually writing the RSpec tests and the functions in the model. We were introduced to RSpec method stubbing which I'm still trying to get used to it.</p><p>All in all , it was a good first week of learning and I'm definitely better than I was a month ago. Â Â </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>150</wp:post_id>
  <wp:post_date>2013-05-19 15:36:40</wp:post_date>
  <wp:post_date_gmt>2013-05-19 05:36:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>first-week-of-code-school</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="codeschool"><![CDATA[codeschool]]></category>
  <category domain="post_tag" nicename="rspec"><![CDATA[RSpec]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[ruby on rails]]></category>
  <category domain="post_tag" nicename="state-machines"><![CDATA[state machines]]></category>
  <category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>CodeSchool 2nd week - Creating background workers to be passed on to an EmailDelivery service</title>
  <link>https://daphnerouw.wordpress.com/2013/05/26/codeschool-2nd-week-creating-background-workers-to-be-passed-on-to-an-emaildelivery-service/</link>
  <pubDate>Sun, 26 May 2013 12:14:31 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.wordpress.com/?p=185</guid>
  <description/>
  <content:encoded><![CDATA[So, we have finally arrived at the heart of the app which is sending invitations and confirmations through email using Mandrill. <a href="http://mandrill.com/">Mandrill</a>Â is an email service with SMTP setup and API integration. There is even a <a href="http://www.codecademy.com/tracks/mandrill">Mandrill course</a>Â on Codecademy (yipee!) if going through the documentation is not your thing at the moment.

We actually spent a lot of time constructing the email background worker model using <a href="https://github.com/mperham/sidekiq/wiki">Sidekiq</a>, Â and an email deliverer model using <a href="http://www.railstips.org/blog/archives/2008/07/29/it-s-an-httparty-and-everyone-is-invited/">HTTParty gem</a>Â to serialize the content of the email to be sent to Madrill's API. The body of the email is serialized using the ActiveModel::Serializer class which basically allows the user to customize the JSON output; beats passing hashes around.

With a big part of the backend constructed, we needed a front end for the administrator to be able to control the invitations and with that, we were introduced to the <a href="http://activeadmin.info/">ActiveAdmin</a> framework which eliminates the need to build an interface and the basic admin processes.

<a href="http://activeadmin.info/"><img class="size-full wp-image" id="i-213" alt="Image" src="http://daphnerouw.files.wordpress.com/2013/05/features.png?w=650" width="650" height="499" /></a>
<p style="text-align:center;">ActiveAdmin interface making it easy for developers to customize</p>
<p style="text-align:left;">Here's the most interesting part of the course by far, Capybara testing on the interface! What Capybara does is, it allows the developer to test the application by simulating how a user would interact with it. Capybara comes with a bunch of DSLs that emulates the language a user would use ie: <em>page.should have_content</em>("New User"), <em>Attendee.count.should</em> == 1. Language that is so similar to the English language that I struggled a bit understanding how it should work at a low level (this stems from my C++ background). I soon got a hang of it and stopped converting it to C++ constantly in order to understand the DSLs used.</p>
<p style="text-align:left;">Finally, our app has a front end and in the next few lessons, we will be integrating all the parts together. And now ,back to my revision and preparation for the upcoming lesson.</p>
<p style="text-align:left;">p/s: My opinions are based on a beginner's understanding of RoR. Please do correct me if I've made any mistake in terms of terminology and concept.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>185</wp:post_id>
  <wp:post_date>2013-05-26 22:14:31</wp:post_date>
  <wp:post_date_gmt>2013-05-26 12:14:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>codeschool-2nd-week-creating-background-workers-to-be-passed-on-to-an-emaildelivery-service</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="capybara"><![CDATA[Capybara]]></category>
  <category domain="post_tag" nicename="codeschool"><![CDATA[codeschool]]></category>
  <category domain="post_tag" nicename="mandrill"><![CDATA[Mandrill]]></category>
  <category domain="post_tag" nicename="rspec"><![CDATA[RSpec]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1183069]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[daphsta]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_3674957</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2651101;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_3674957</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>features</title>
  <link>https://daphnerouw.wordpress.com/?attachment_id=213</link>
  <pubDate>Sun, 26 May 2013 06:17:52 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.files.wordpress.com/2013/05/features.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>213</wp:post_id>
  <wp:post_date>2013-05-26 16:17:52</wp:post_date>
  <wp:post_date_gmt>2013-05-26 06:17:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>features</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://daphnerouw.files.wordpress.com/2013/05/features.png</wp:attachment_url>
</item>
<item>
  <title>CodeSchool 3rd week - Tokens</title>
  <link>https://daphnerouw.wordpress.com/2013/06/03/codeschool-3rd-week-tokens/</link>
  <pubDate>Mon, 03 Jun 2013 08:10:47 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.wordpress.com/?p=254</guid>
  <description/>
  <content:encoded><![CDATA[<p>That was all we did in week 3, creating email tokens and testing it. It doesn't sound like a lot for 6 hours of lesson but we sure did a lot of discovering when dealing with BCrypt in creating tokens and the output of encoding the hash using urlsafe_encode64.Â </p><p>At the moment, every attendee will have a 3 unique tokens generated for the actions <span style="color:#339966;">confirm</span>, <span style="color:#339966;">pay</span> and <span style="color:#339966;">decline</span>. Â These tokens are generated using the BCrypt::Password create function with a hash.</p><p>BCrypt is the most recommended hash function compared to MD5,SHA1,SHA256 etc. From my understanding, BCrypt uses a variant of the Blowfish encryption algorithm that introduces a <em>work factorÂ </em>which determines how expensive the hash function will be. BCrypt is really slow as the <em>work factor</em> increases compared to other hash functions. This would only mean it would take much longer to crack passwords with massive amounts of resources.</p><p>With every email sent out, there will be a link for the attendee to click on to notify of his/her decision be it confirm, pay or decline in one step. Dependent on their decision, the attendee object will be moved into a different state and forwarded to the appropriate link.Â </p><p>This is where <a href="https://www.braintreepayments.com">BrainTree</a> payment gateway comes into play in the app. All credit card transactions and information storage is handled by BrainTree. The integration to their APIs will be in the next few lessons.Â </p><p>Of course we took a lot of time writing the RSpec tests on the tokens and the links and refactoring our code to ensure there are no unnecessary repetition. At the moment we have not done anything to the <em>viewÂ </em>hence I can't provide any screenshots of our progress. However, this is the project linkÂ <a title="TedX Brisbane" href="https://github.com/net-engine/tedx-brisbane" target="_blank">https://github.com/net-engine/tedx-brisbane</a>Â in case you want to have a look around.</p><p>Â </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>254</wp:post_id>
  <wp:post_date>2013-06-03 18:10:47</wp:post_date>
  <wp:post_date_gmt>2013-06-03 08:10:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>codeschool-3rd-week-tokens</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="codeschool"><![CDATA[codeschool]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_71baa322193337ab277ca9948f6658c2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[daphsta]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_3674957</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2651101;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>368</wp:comment_id>
    <wp:comment_author><![CDATA[SengMing Tan]]></wp:comment_author>
    <wp:comment_author_email>tansengming@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/sengming</wp:comment_author_url>
    <wp:comment_author_IP>103.8.168.18</wp:comment_author_IP>
    <wp:comment_date>2013-06-13 10:00:24</wp:comment_date>
    <wp:comment_date_gmt>2013-06-13 00:00:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great to you get through so much so quickly. It probably took me months to get to where you're at now. Feel free to let me know if you need me to look at a Pull Request or two.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1371081625.12360095977783203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>561010009</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1371089332</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1371089332.13854694366455078125;s:7:"message";s:46:"daphsta changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"daphsta";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-13 00:00:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Rails Girls Summer of Code</title>
  <link>https://daphnerouw.wordpress.com/2013/06/03/rails-girls-summer-of-code/</link>
  <pubDate>Mon, 03 Jun 2013 08:16:11 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.wordpress.com/?p=323</guid>
  <description/>
  <content:encoded><![CDATA[<p>I've also been occupying my time in organizing a team to participate in theÂ <a href="http://railsgirlssummerofcode.org/" target="_blank">Rails Girls Summer of CodeÂ </a>. I just chanced upon this in my Twitter feed and thought I would check it out to see what the buzz is all about. As I was reading through it, my eyes grew the widest it has ever did. I knew I could totally do this, all I needed was a female pair, a coach to support us, and a mentor to guide us in the right direction of the project.</p><p>Looking for a pair wouldn't be too hard because there are so many enthusiastic women from Rails Girls who would immediately jump into an opportunity like that. The actual uphill task was convincing an individual/company to coach us for the entire duration of this program which is 3 months and dedicating a couple of hours a day to coach us. Students are paid a stipend of $1,500 by Rails Girls organization and coaches would be doing this pro bono.Â </p><p>I knew I couldn't just sit and wait for Rails Girls to find us a coach in our city and that would mean going the extra mile to hunt down people in the Rails community who would be kind enough to dedicate themselves for a good cause. After randomly tweeting people, we are finally in the midst of talking to someone who could potentially dedicate his time to coach us! The next step is to put in our application as a team and cross our fingers in hopes of being selected as a successful applicant for this program.Â </p><p>To give you an idea, I have embedded the Rails Girls video. Gosh, I hope we get it!</p><p>[vimeo http://www.vimeo.com/67004430 w=320&h=180]</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>323</wp:post_id>
  <wp:post_date>2013-06-03 18:16:11</wp:post_date>
  <wp:post_date_gmt>2013-06-03 08:16:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-girls-summer-of-code</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rails-girls"><![CDATA[Rails Girls]]></category>
  <category domain="post_tag" nicename="summer-of-code"><![CDATA[Summer of Code]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[daphsta]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_3674957</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2651101;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>CodeSchool 4th and 5th week</title>
  <link>https://daphnerouw.wordpress.com/2013/06/21/codeschool-4th-and-5th-week/</link>
  <pubDate>Fri, 21 Jun 2013 07:36:58 +0000</pubDate>
  <dc:creator>daphsta</dc:creator>
  <guid isPermaLink="false">http://daphnerouw.wordpress.com/?p=327</guid>
  <description/>
  <content:encoded><![CDATA[<p><strong>Week 4- BrainTree integration</strong></p><p>The whole week was focused on the payment workflow and integration with BrainTree. It was a complex process getting our app to integrate and ensuring all the proper fields are passed on to their servers. I'm not saying that it is complicated to integrate with BrainTree, in fact once you have all the right information and keys set up, it is a straightforward process if the app accepts payments and passes it onto BrainTree's servers.</p><p>We have chosen to use the <a href="https://www.braintreepayments.com/docs/ruby/transactions/create_tr">Transparent Redirect</a>Â transaction whereby all payments will be submitted directly to BrainTree's servers and no credit card information will be stored on the app server. Every merchant who signs up will be given a set of API keys to be included in the app.rb. Developers can sign up for a sandbox account to obtain the keysÂ </p><p>To create transactions, a HTML form_for is set up to retrieve the Customer's Details and Credit Card Details. The form includes a hidden transaction data which contains the transaction type and URL to be directed to.</p><pre>tr_data = Braintree::TransparentRedirect.transaction_data(
  :redirect_url =&gt; "http://example.com/url_to_redirect_to",
  :transaction =&gt; {
    :type =&gt; "sale",
    :amount =&gt; "10.00"
  }
)</pre><p>All we needed to do in our controller is to verify if the attendee has received an invitation and to create the transaction details to be passed on to their servers. The app will then await for a URL confirmation from BrainTree's servers and notify the user if they payment has been successful or failed. Obtaining the URL confirmation is as simple as setting the API below:</p><pre>result = Braintree::TransparentRedirect.confirm(request.query_string)                                                                   </pre><p><strong>Week 5 - API design and Handlebars templates</strong></p><p>I was really looking forward towards learning about writing our own APIs and how the APIs would be consumed in the front end of the app. Why did we need APIs in our app? The index page contains a dashboard with a live feed of the status of attendees. Visitors will be able to see the number of people who are Awaiting for Invitation, Received Invitation, Paid, Received Reminder, Confirmed and Declined. Visitors will be able to register to get an invitation and then go through the payment process for confirmation.Â </p><p>Abiding by API conventions, we use namespace to keep track of our versioning. TheÂ <strong>Api::V1::BaseControllerÂ </strong>responds to a JSON string and authenticates the HTTP request with a token. TheÂ <strong>Api::V1::AttendeesController &lt; Api::V1::BaseControllerÂ </strong>responds with a serialized string of the statistics of attendees to be displayed on the dashboard. To serialized, we used Active-Model-Serializer again to construct a JSON string.Â </p><p>To consume the API, our front end is written in <a href="http://coffeescript.org">CoffeeScriptÂ </a>to render the statistics to be displayed on the dashboard. I must say that it takes a bit of getting used to writing JavaScript without the {},; and var. Just like Ruby, all CoffeeScript syntaxes are terse and it compiles into JavaScript. One of the advantages of using CoffeeScript is that, variables are not global by default hence it would prevent confusion of having variables with the same names from different JS files. I think I'm sticking to CoffeeScript and would not touch JavaScript unless necessary.Â </p><p>The data from the API is passed into a function that will invoke the HandlebarsTemplates.</p><pre>HandlebarsTemplates['attendee_statistics'](data.attendee_statistics);</pre><p>This will run the Handlebars file stored in the asset pipeline and it will be compiled, compressed and cached like all the JavaScript files in the app.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>327</wp:post_id>
  <wp:post_date>2013-06-21 17:36:58</wp:post_date>
  <wp:post_date_gmt>2013-06-21 07:36:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>codeschool-4th-and-5th-week</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="api"><![CDATA[API]]></category>
  <category domain="post_tag" nicename="braintree"><![CDATA[BrainTree]]></category>
  <category domain="post_tag" nicename="codeschool"><![CDATA[codeschool]]></category>
  <category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
  <category domain="post_tag" nicename="handlebars"><![CDATA[handlebars]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[daphsta]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_3674957</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2651101;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
